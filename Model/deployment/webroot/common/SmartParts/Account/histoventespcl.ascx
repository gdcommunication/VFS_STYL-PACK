<%@ Control Language="C#" ClassName="histoventespcl" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdTHISTOPCLS" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 ExpandableRows="True" ResizableColumns="True"  OnRowCommand="grdTHISTOPCLS_RowCommand"
 DataKeyNames="InstanceId,Id"
 AllowSorting="true" OnSorting="grdTHISTOPCLS_Sorting"  OnRowEditing="grdTHISTOPCLS_RowEditing"  ShowSortIcon="true" >
<Columns>
 <asp:ButtonField CommandName="Edit"
  Text="<%$ resources: grdTHISTOPCLS.bbbc8a0b-5bff-4a06-afa6-01327625809b.Text %>"               >
          </asp:ButtonField>
      <asp:BoundField DataField="Date_com"
      HeaderText="<%$ resources: grdTHISTOPCLS.f0820245-0d88-466c-b9f6-6980b134ec22.ColumnHeading %>"       SortExpression="Date_com"    >
      </asp:BoundField>
    <asp:BoundField DataField="Designation"
      HeaderText="<%$ resources: grdTHISTOPCLS.a6cd20c6-36ab-48e9-b120-7a40dd28140e.ColumnHeading %>"       SortExpression="Designation"    >
      </asp:BoundField>
    <asp:BoundField DataField="GAMME"
      HeaderText="<%$ resources: grdTHISTOPCLS.a71eff47-39de-4582-b6c6-e4f82472b16c.ColumnHeading %>"       SortExpression="GAMME"    >
      </asp:BoundField>
    <asp:BoundField DataField="FAMILLE"
      HeaderText="<%$ resources: grdTHISTOPCLS.9a54e2d7-8079-4e4f-98bc-733a1f4f6efb.ColumnHeading %>"       SortExpression="FAMILLE"    >
      </asp:BoundField>
    <asp:BoundField DataField="Quantite"
      HeaderText="<%$ resources: grdTHISTOPCLS.219bdd12-d3a3-49ae-a648-c88d2d13745b.ColumnHeading %>"       SortExpression="Quantite"    >
      </asp:BoundField>
    <asp:BoundField DataField="Pu_ht"
      HeaderText="<%$ resources: grdTHISTOPCLS.44d8c3bc-244a-4ec9-b5cf-efce3a95d61f.ColumnHeading %>"       SortExpression="Pu_ht"    >
      </asp:BoundField>
    <asp:BoundField DataField="Ca_ht"
      HeaderText="<%$ resources: grdTHISTOPCLS.708e822c-da0e-47a7-964d-f269be2790aa.ColumnHeading %>"       SortExpression="Ca_ht"    >
      </asp:BoundField>
 </Columns>
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdTHISTOPCLS_Sorting(object sender, GridViewSortEventArgs e) { }
protected void grdTHISTOPCLS_RowCommand(object sender, GridViewCommandEventArgs e)
{
    if (e.CommandName == "Page")
        return;
    int rowIndex;
    if (Int32.TryParse(e.CommandArgument.ToString(), out rowIndex))
    {
        dsTHISTOPCLS.SelectedIndex = rowIndex;
        object currentEntity = dsTHISTOPCLS.Current;
        if ((currentEntity is Sage.Platform.ComponentModel.ComponentView) && !((Sage.Platform.ComponentModel.ComponentView)currentEntity).IsVirtualComponent)
            currentEntity = ((Sage.Platform.ComponentModel.ComponentView)currentEntity).Component;
        string id = String.Empty;
        //Check if this is an unpersisted entity and use its InstanceId
        if (Sage.Platform.WebPortal.PortalUtil.ObjectIsNewEntity(currentEntity))
        {
            if (grdTHISTOPCLS.DataKeys[0].Values.Count > 1) {
                foreach (DictionaryEntry val in grdTHISTOPCLS.DataKeys[rowIndex].Values)
                {
                    if (val.Key.ToString() == "InstanceId")
                    {
                        Guid instanceId = (Guid)val.Value;
                        dsTHISTOPCLS.SetCurrentEntityByInstanceId(instanceId);
                        id = instanceId.ToString();
                        currentEntity = dsTHISTOPCLS.Current;
                        if ((currentEntity is Sage.Platform.ComponentModel.ComponentView) && !((Sage.Platform.ComponentModel.ComponentView)currentEntity).IsVirtualComponent)
                            currentEntity = ((Sage.Platform.ComponentModel.ComponentView)currentEntity).Component;
                    }
                }
            }
        }
        else
        {
            foreach (DictionaryEntry val in grdTHISTOPCLS.DataKeys[rowIndex].Values)
            {
                if (val.Key.ToString() != "InstanceId")
                {
                    id = val.Value.ToString();
                }
            }
        }
        if (e.CommandName.Equals("Edit"))
        {
            if (DialogService != null)
            {
                // QFDataGrid
                            DialogService.SetSpecs(400, 600, "visudetailhistopcl", string.Empty );
                            DialogService.EntityType = typeof(Sage.Entity.Interfaces.ITHISTOPCL );
                DialogService.EntityID = id;
                DialogService.ShowDialog();
            }
        }
    }
    grdTHISTOPCLS_refresh();
}
    protected void grdTHISTOPCLS_refresh()
    {
        if (PageWorkItem != null) {
            Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
            if (refresher != null)
            {
                refresher.RefreshAll();
            }
            else
            {
                Response.Redirect(Request.Url.ToString());
            }
        }
    }

        protected void grdTHISTOPCLS_RowEditing(object sender, GridViewEditEventArgs e)
    {
        grdTHISTOPCLS.SelectedIndex = e.NewEditIndex;
        e.Cancel = true;
    }
        </script>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="histoventespcl_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=histoventespcl&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkhistoventespclHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="histoventespcl" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IAccount); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsTHISTOPCLS;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsTHISTOPCLS
{ 
  get 
  {
    if (_dsTHISTOPCLS == null)
    {
             _dsTHISTOPCLS = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.ITHISTOPCL), 
	    EntityType              ,"THISTOPCLS", System.Reflection.MemberTypes.Property);
                   _dsTHISTOPCLS.UseSmartQuery = true;
      	   	}
 	return _dsTHISTOPCLS;
  }
}

void dsTHISTOPCLS_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsTHISTOPCLS.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsTHISTOPCLS);
   }
}

 



 

protected override void OnAddEntityBindings() {
       dsTHISTOPCLS.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("THISTOPCLS", grdTHISTOPCLS ));
   dsTHISTOPCLS.BindFieldNames = new String[] { "Id","Date_com","Designation","GAMME","FAMILLE","Quantite","Pu_ht","Ca_ht" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dsTHISTOPCLS_OnCurrentEntitySet);
    
}
       

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dsTHISTOPCLS.SourceObject == null) { dsTHISTOPCLS.SourceObject = BindingSource.Current; }
if (dsTHISTOPCLS.SourceObject == null) { RegisterBindingsWithClient(dsTHISTOPCLS); }
dsTHISTOPCLS.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new histoventespclAdapter(this)); }
}

public class histoventespclAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.Ihistoventespcl
{
    public histoventespclAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IDataGridControl _grdTHISTOPCLS;
    public  Sage.Platform.Controls.IDataGridControl grdTHISTOPCLS
    {
        get { return FindControl(ref _grdTHISTOPCLS, "grdTHISTOPCLS"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dsTHISTOPCLS;
    public  Sage.Platform.Controls.IDataSourceControl dsTHISTOPCLS
    {
        get { return FindControl(ref _dsTHISTOPCLS, "dsTHISTOPCLS"); }
    }

}

</script>

<script type="text/javascript">
</script>
