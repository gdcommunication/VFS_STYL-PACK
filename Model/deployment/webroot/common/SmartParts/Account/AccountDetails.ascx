<%@ Control Language="C#" ClassName="AccountDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="25%" />
            <col width="25%" />
            <col width="25%" />
     <tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="AccountName_lbl" AssociatedControlID="AccountName" runat="server" Text="<%$ resources: AccountName.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="AccountName" Required="true"  dojoType="Sage.UI.Controls.TextBox" MaxLength="128"  />
  </div>

      </td>
                      <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="QFTextBox_lbl" AssociatedControlID="QFTextBox" runat="server" Text="<%$ resources: QFTextBox.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="QFTextBox"  ToolTip="<%$ resources: QFTextBox.ToolTip %>"  SelectionMode="Single" Rows="1" data-dojo-type="dijit.form.Select"  CssClass="select-control "  >
</asp:ListBox>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFNOM_lbl" AssociatedControlID="QFNOM" runat="server" Text="<%$ resources: QFNOM.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFNOM" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFPRENOM_lbl" AssociatedControlID="QFPRENOM" runat="server" Text="<%$ resources: QFPRENOM.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFPRENOM" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="QFListBox_lbl" AssociatedControlID="QFListBox" runat="server" Text="<%$ resources: QFListBox.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="QFListBox"  ToolTip="<%$ resources: QFListBox.ToolTip %>"  SelectionMode="Single" Rows="1" data-dojo-type="dijit.form.Select"  CssClass="select-control "  >
</asp:ListBox>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="MainPhone_lbl" AssociatedControlID="MainPhone" runat="server" Text="<%$ resources: MainPhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="MainPhone"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Fax_lbl" AssociatedControlID="Fax" runat="server" Text="<%$ resources: Fax.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="Fax"
 />
  </div>

      </td>
                <td  >
  <hr />
 

      </td>
      </tr>
<tr>
            <td rowspan="4"  >
 <div class=" lbl alignleft">
   <asp:Label ID="Address_lbl" AssociatedControlID="Address" runat="server" Text="<%$ resources: Address.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol address"  >
    <SalesLogix:AddressControl runat="server" ID="Address" AddressDescriptionPickListName="Address Description (Account)" AddressDescriptionPickListId="kSYST0000014" ButtonToolTip="<%$ resources: Address.ButtonToolTip %>" AddressToolTip="<%$ resources: Address.AddressToolTip %>" >
<AddressDescStyle Height="80"></AddressDescStyle> </SalesLogix:AddressControl>
</div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="QFSLXEmail_lbl" AssociatedControlID="QFSLXEmail" runat="server" Text="<%$ resources: QFSLXEmail.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol"  > 
<SalesLogix:Email runat="server" ID="QFSLXEmail" EmailTextBoxStyle-ForeColor="#000099" EmailTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklType_lbl" AssociatedControlID="pklType" runat="server" Text="<%$ resources: pklType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklType" PickListName="Account Type" AutoPostBack="true" NoneEditable="true"  />
  </div>

      </td>
      </tr>
<tr>
                  <td  >
<div class="dependency">
<SalesLogix:DependencyLookupControl runat="server" ID="txtgroupement"  ToolTip="<%$ resources: txtgroupement.ToolTip %>"  LabelCssClass="lbl" ButtonToolTip="<%$ resources: txtgroupement.ButtonToolTip %>"  >
<LookupResultsHeaderStyle BackColor="ActiveCaption" Font-Bold="True" ForeColor="White" />
<LookupDialogStyle BackColor="ButtonFace" />
<LookupResultsStyle CellPadding="4" ForeColor="Black" />
<DependentLookups>
 <SalesLogix:DependentLookup LookupEntityName="TGroupement" LookupEntityTypeName="Sage.Entity.Interfaces.ITGroupement, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" DropDownDisplayProperty="Code_groupement" ParentProperty="Code_groupement" PropertyDisplay="<%$ resources: txtgroupement.DependentLookups.Code_groupement.PropertyDisplay %>" BindingPropertyName="TCompteInformations.Groupement">
  </SalesLogix:DependentLookup>
  </DependentLookups>
  <LookupPreFilters>
      </LookupPreFilters>
</SalesLogix:DependencyLookupControl>
</div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="infogroupement_lbl" AssociatedControlID="infogroupement" runat="server" Text="<%$ resources: infogroupement.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="infogroupement"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
                  <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox2_lbl" AssociatedControlID="QFTextBox2" runat="server" Text="<%$ resources: QFTextBox2.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox2"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Status_lbl" AssociatedControlID="Status" runat="server" Text="<%$ resources: Status.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="Status" PickListName="Account Status" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
      </tr>
<tr>
                  <td></td>
                <td  >
 <asp:Button runat="server" ID="QFPASTILLES"
 Text="<%$ resources: QFPASTILLES.Caption %>"  />
 
      </td>
      </tr>
<tr>
            <td  colspan="3" >
  <hr />
 

      </td>
                  </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="WebAddress_lbl" AssociatedControlID="WebAddress" runat="server" Text="<%$ resources: WebAddress.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol"  > 
    <SalesLogix:URL runat="server" ID="WebAddress" ButtonToolTip="<%$ resources: WebAddress.ButtonToolTip %>" URLTextBoxStyle-ForeColor="#000099" URLTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Industry_lbl" AssociatedControlID="Industry" runat="server" Text="<%$ resources: Industry.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="Industry" PickListName="Industry" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
                <td rowspan="3"  >
 <div class=" lbl alignleft" >
   <asp:Label ID="BusinessDescription_lbl" AssociatedControlID="BusinessDescription" runat="server" Text="<%$ resources: BusinessDescription.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="BusinessDescription"  Rows="2" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea"  />
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl aligncenter">
   <asp:Label ID="Owner_lbl" AssociatedControlID="Owner" runat="server" Text="<%$ resources: Owner.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol"  > 
<SalesLogix:OwnerControl runat="server" ID="Owner" ButtonToolTip="<%$ resources: Owner.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
            </tr>
<tr>
            <td></td>
                <td></td>
            </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTITRE_lbl" AssociatedControlID="QFTITRE" runat="server" Text="<%$ resources: QFTITRE.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTITRE" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox" Visible="false"  />
  </div>

      </td>
                <td  >
<asp:Image runat="server" ID="QFImage" 
 AlternateText="" Visible="false" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=boutonrouge" />

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <asp:Button runat="server" ID="ALMAJPV"
 Text="<%$ resources: ALMAJPV.Caption %>" Visible="false"  />
 
      </td>
                <td  >
 <asp:Button runat="server" ID="ALMAJTIERS"
 Text="<%$ resources: ALMAJTIERS.Caption %>"  />
 
      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="TollFree_lbl" AssociatedControlID="TollFree" runat="server" Text="<%$ resources: TollFree.Caption %>" Visible="false" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="TollFree"
MaxLength="32" Visible="false"  />
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="AccManager_lbl" AssociatedControlID="AccManager" runat="server" Text="<%$ resources: AccManager.Caption %>" Visible="false" ></asp:Label>
 </div>   
   <div  class="textcontrol"  > 
    <SalesLogix:SlxUserControl runat="server" ID="AccManager" ButtonToolTip="<%$ resources: AccManager.ButtonToolTip %>" Visible="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="ALCODEL100_lbl" AssociatedControlID="ALCODEL100" runat="server" Text="<%$ resources: ALCODEL100.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="ALCODEL100" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox" Visible="false"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Division_lbl" AssociatedControlID="Division" runat="server" Text="<%$ resources: Division.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Division"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64" Visible="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklSubType_lbl" AssociatedControlID="pklSubType" runat="server" Text="<%$ resources: pklSubType.Caption %>" Visible="false" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklSubType" MustExistInList="false" Visible="false"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="ALDATETRANSFERT_lbl" AssociatedControlID="ALDATETRANSFERT" runat="server" Text="<%$ resources: ALDATETRANSFERT.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="ALDATETRANSFERT" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox" Visible="false"  />
  </div>

      </td>
                <td></td>
                <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="AccountDetails_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="AccountDetails_9" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="btnSaveAccount"
 AlternateText="<%$ resources: btnSaveAccount.Caption %>"  ToolTip="<%$ resources: btnSaveAccount.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="cmdReset"
 AlternateText="<%$ resources: cmdReset.Caption %>"  ToolTip="<%$ resources: cmdReset.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Reset_16x16"  />
 
    <asp:ImageButton runat="server" ID="btnDelete"
 AlternateText="<%$ resources: btnDelete.Caption %>"  ToolTip="<%$ resources: btnDelete.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
   <SalesLogix:Copy ID="cmdCopyAccount" runat="server" CopyToDestination="Clipboard"
 ContentConfig="~/SummaryConfigData/CopyAccount.xml"
 ToolTip="<%$ resources: cmdCopyAccount.ToolTip %>"  ButtonImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=CopyToClipboard_16x16"  DisplayMode="AsControl" 
>
</SalesLogix:Copy>

  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AccountDetails&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAccountDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AccountDetails" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IAccount); }
}

 

protected override void OnAddEntityBindings() {
                 // AccountName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AccountNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountName", AccountName, "Text");
        BindingSource.Bindings.Add(AccountNameTextBinding);
                                // MainPhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding MainPhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("MainPhone", MainPhone, "Text");
        BindingSource.Bindings.Add(MainPhoneTextBinding);
                    // Fax.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding FaxTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Fax", Fax, "Text");
        BindingSource.Bindings.Add(FaxTextBinding);
                       // Address.AddressCity Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressCityBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.City", Address, "AddressCity");
        AddressAddressCityBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressCityBinding);
                 // Address.AddressCountry Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressCountryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Country", Address, "AddressCountry");
        AddressAddressCountryBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressCountryBinding);
                 // Address.AddressCounty Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressCountyBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.County", Address, "AddressCounty");
        AddressAddressCountyBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressCountyBinding);
                 // Address.AddressDesc1 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressDesc1Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address1", Address, "AddressDesc1");
        BindingSource.Bindings.Add(AddressAddressDesc1Binding);
                 // Address.AddressDesc2 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressDesc2Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address2", Address, "AddressDesc2");
        AddressAddressDesc2Binding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressDesc2Binding);
                 // Address.AddressDesc3 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressDesc3Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address3", Address, "AddressDesc3");
        AddressAddressDesc3Binding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressDesc3Binding);
                 // Address.AddressDescription Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressDescriptionBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Description", Address, "AddressDescription");
        AddressAddressDescriptionBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressDescriptionBinding);
                 // Address.AddressDisplay Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressDisplayBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.FullAddress", Address, "AddressDisplay");
        AddressAddressDisplayBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressDisplayBinding);
                 // Address.AddressIsMailing Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressIsMailingBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.IsMailing", Address, "AddressIsMailing");
        AddressAddressIsMailingBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressIsMailingBinding);
                 // Address.AddressIsPrimary Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressIsPrimaryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.IsPrimary", Address, "AddressIsPrimary");
        AddressAddressIsPrimaryBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressIsPrimaryBinding);
                 // Address.AddressPostalCode Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressPostalCodeBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.PostalCode", Address, "AddressPostalCode");
        AddressAddressPostalCodeBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressPostalCodeBinding);
                 // Address.AddressSalutation Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressSalutationBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Salutation", Address, "AddressSalutation");
        AddressAddressSalutationBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressSalutationBinding);
                 // Address.AddressState Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressStateBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.State", Address, "AddressState");
        AddressAddressStateBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressStateBinding);
                 // Address.AddressType Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressAddressTypeBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.AddressType", Address, "AddressType");
        AddressAddressTypeBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressAddressTypeBinding);
                 // Address.PrimaryAddress Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AddressPrimaryAddressBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.PrimaryAddress", Address, "PrimaryAddress");
        AddressPrimaryAddressBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(AddressPrimaryAddressBinding);
                    // QFSLXEmail.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFSLXEmailTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Email", QFSLXEmail, "Text");
        BindingSource.Bindings.Add(QFSLXEmailTextBinding);
                    // pklType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Type", pklType, "PickListValue");
        BindingSource.Bindings.Add(pklTypePickListValueBinding);
      BindingSource.AddBindingProvider(txtgroupement as Sage.Platform.EntityBinding.IEntityBindingProvider);
                 // txtgroupement.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtgroupementTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TCompteInformations.Groupement", txtgroupement, "Text");
        BindingSource.Bindings.Add(txtgroupementTextBinding);
                       // QFTextBox2.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox2TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TCompteInformations.Forme_jurIdique", QFTextBox2, "Text");
        BindingSource.Bindings.Add(QFTextBox2TextBinding);
                    // Status.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding StatusPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Status", Status, "PickListValue");
        BindingSource.Bindings.Add(StatusPickListValueBinding);
                          // WebAddress.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding WebAddressTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("WebAddress", WebAddress, "Text");
        BindingSource.Bindings.Add(WebAddressTextBinding);
                    // Industry.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding IndustryPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Industry", Industry, "PickListValue");
        BindingSource.Bindings.Add(IndustryPickListValueBinding);
                    // BusinessDescription.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding BusinessDescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BusinessDescription", BusinessDescription, "Text");
        BindingSource.Bindings.Add(BusinessDescriptionTextBinding);
                    // Owner.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding OwnerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Owner", Owner, "LookupResultValue");
        BindingSource.Bindings.Add(OwnerLookupResultValueBinding);
                                // TollFree.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding TollFreeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TollFree", TollFree, "Text");
        BindingSource.Bindings.Add(TollFreeTextBinding);
                    // AccManager.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AccManagerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountManager", AccManager, "LookupResultValue", "", null);
        BindingSource.Bindings.Add(AccManagerLookupResultValueBinding);
                    // ALCODEL100.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ALCODEL100TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CODEL100", ALCODEL100, "Text");
        BindingSource.Bindings.Add(ALCODEL100TextBinding);
                    // Division.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding DivisionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Division", Division, "Text");
        BindingSource.Bindings.Add(DivisionTextBinding);
                    // pklSubType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklSubTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SubType", pklSubType, "PickListValue");
        BindingSource.Bindings.Add(pklSubTypePickListValueBinding);
                    // ALDATETRANSFERT.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ALDATETRANSFERTTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Datetransfert", ALDATETRANSFERT, "Text");
        BindingSource.Bindings.Add(ALDATETRANSFERTTextBinding);
    
   
             
      
      
      
                 
      
      
      
        }
                                                                                                                                                                                                                         
protected void pklType_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IAccount account = this.BindingSource.Current as Sage.Entity.Interfaces.IAccount;
if(account != null)
{
		account.SubType = "";
}
  Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}
protected void QFPASTILLES_ClickAction(object sender, EventArgs e) {
if (DialogService != null) {
  // DialogActionItem
  DialogService.SetSpecs(400, 600, "Pastilles", GetLocalResourceObject("16fb234f-1621-4f7a-8284-a2337ceb72ac.DialogTitleOverride").ToString() );
    DialogService.EntityType = typeof(Sage.Entity.Interfaces.IAccount); 
    DialogService.ShowDialog();
}
  Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}
protected void ALMAJPV_ClickAction(object sender, EventArgs e) {
//TODO
 string vUrlWebService = "";
    string vLoginWebService = "";
    string vPasswordWebService = "";
    string vUserId = Sage.SalesLogix.API.MySlx.Security.CurrentSalesLogixUser.Id.ToString();
    //Sage.Entity.Interfaces.IAccount vAccount = (Sage.Entity.Interfaces.IAccount)this.GetParentEntity();
    //string vAccountId = vAccount.Id.ToString();
    string vCodeTiers = ALCODEL100.Text;

    Sage.Platform.Data.IDataService vDataSvc = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Data.IDataService>();
    using (System.Data.OleDb.OleDbConnection vConnection = new System.Data.OleDb.OleDbConnection(vDataSvc.GetConnectionString()))
    {
        vConnection.Open();
        string vInstructionSql = "select URLWEBSERVICE, LOGINWEBSERVICE, PASSWDWEBSERVICE from sysdba.APPIDMAPPING";
        using (System.Data.OleDb.OleDbCommand vCommand = new System.Data.OleDb.OleDbCommand(vInstructionSql, vConnection))
        {
            System.Data.OleDb.OleDbDataReader vReader = vCommand.ExecuteReader();
            while (vReader.Read())
            {
                vUrlWebService = vReader["URLWEBSERVICE"].ToString();
                vLoginWebService = vReader["LOGINWEBSERVICE"].ToString();
                vPasswordWebService = vReader["PASSWDWEBSERVICE"].ToString();
            }
        }
        vConnection.Close();
    }

    System.Web.UI.ScriptManager.RegisterClientScriptBlock(Page, typeof(Page), "Script", "transfertPieceVenteMethod('" + vUrlWebService + "', '" + vLoginWebService + "', '" + vPasswordWebService + "', '" + vCodeTiers + "', '" + vUserId + "');", true);


}
protected void ALMAJTIERS_ClickAction(object sender, EventArgs e) {
//TODO
    string vUrlWebService = "";
    string vLoginWebService = "";
    string vPasswordWebService = "";
    string vUserId = Sage.SalesLogix.API.MySlx.Security.CurrentSalesLogixUser.Id.ToString();
    Sage.Entity.Interfaces.IAccount vAccount = (Sage.Entity.Interfaces.IAccount)this.GetParentEntity();
    string vAccountId = vAccount.Id.ToString();
            
    Sage.Platform.Data.IDataService vDataSvc = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Data.IDataService>();
    using (System.Data.OleDb.OleDbConnection vConnection = new System.Data.OleDb.OleDbConnection(vDataSvc.GetConnectionString()))
    {
        vConnection.Open();
        string vInstructionSql = "select URLWEBSERVICE, LOGINWEBSERVICE, PASSWDWEBSERVICE from sysdba.APPIDMAPPING";
        using (System.Data.OleDb.OleDbCommand vCommand = new System.Data.OleDb.OleDbCommand(vInstructionSql, vConnection))
        {
            System.Data.OleDb.OleDbDataReader vReader = vCommand.ExecuteReader();
            while (vReader.Read())
            {
                vUrlWebService = vReader["URLWEBSERVICE"].ToString();
                vLoginWebService = vReader["LOGINWEBSERVICE"].ToString();
                vPasswordWebService = vReader["PASSWDWEBSERVICE"].ToString();
            }
        }
        vConnection.Close();
    }

    System.Web.UI.ScriptManager.RegisterClientScriptBlock(Page, typeof(Page), "Script", "transferMethod('" + vUrlWebService + "', '" + vLoginWebService + "', '" + vPasswordWebService + "', '" + vAccountId + "', '" + vUserId + "');", true);


}
protected void btnSaveAccount_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IAccount entity = (Sage.Entity.Interfaces.IAccount) this.BindingSource.Current;
if (entity.HasPropagationChanges()) {
            btnSaveAccount_ClickActionS(sender, e);
      
      }
else {
            btnSaveAccount_ClickActionF(sender, e);
      
      }
}
protected void btnSaveAccount_ClickActionS(object sender, EventArgs e) {
if (DialogService != null) {
  // DialogActionItem
  DialogService.SetSpecs(400, 400, "UpdateAccountOptions", string.Empty );
    DialogService.EntityType = typeof(Sage.Entity.Interfaces.IAccount); 
    DialogService.ShowDialog();
}

}
protected void btnSaveAccount_ClickActionF(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IAccount _entity = BindingSource.Current as Sage.Entity.Interfaces.IAccount;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

          btnSaveAccount_ClickActionFBRC(sender, e);
    
  
}
protected void btnSaveAccount_ClickActionFBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}
protected void cmdReset_ClickAction(object sender, EventArgs e) {
  
}
protected void btnDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }

          btnDelete_ClickActionBRC(sender, e);
    
  
}
protected void btnDelete_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect("Account.aspx");
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 pklType.PickListValueChanged += new EventHandler(pklType_ChangeAction);
QFPASTILLES.Click += new EventHandler(QFPASTILLES_ClickAction);
QFPASTILLES.Click += new EventHandler(DialogService.CloseEventHappened);
QFPASTILLES.Click += new EventHandler(Refresh);
ALMAJPV.Click += new EventHandler(ALMAJPV_ClickAction);
ALMAJTIERS.Click += new EventHandler(ALMAJTIERS_ClickAction);
if (RoleSecurityService != null)
{
if (RoleSecurityService.HasAccess("ENTITIES/ACCOUNT/EDIT"))
{
btnSaveAccount.Click += new ImageClickEventHandler(btnSaveAccount_ClickAction);
}
}
cmdReset.Click += new ImageClickEventHandler(cmdReset_ClickAction);
if (RoleSecurityService != null)
{
if (RoleSecurityService.HasAccess("ENTITIES/ACCOUNT/DELETE"))
{
btnDelete.Click += new ImageClickEventHandler(btnDelete_ClickAction);
}
}


}

protected void quickformload0(object sender, EventArgs e) {
//Begin Load Action

     Sage.Entity.Interfaces.IAccount account = this.BindingSource.Current as Sage.Entity.Interfaces.IAccount;
	 pklSubType.PickListName = account.GetSubTypePickListName();
	 
//End Load Action}

}
protected void quickformload1(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("AccountDetails.OnLoad1", methodArgs);

}
protected void quickformload2(object sender, EventArgs e) {
// if (this.txtgroupement.Text == null || this.txtgroupement.Text == "" )
//	    {
//		this.infogroupement.Visible =false;
//		this.infogroupement_lbl.Visible=false;
//	    }
//	    else
//    {
//		this.infogroupement.Visible =true;
//		this.infogroupement_lbl.Visible=true;
//	    }
//	if (this.Industry.PickListValue  != "PHARMACIE" & this.Industry.PickListValue != "OPTIQUE" & this.Industry.PickListValue != "GROUPEMENT" )
//		{
//			this.txtgroupement.Visible =false;
//			this.txtgroupement_lbl.Visible=false;
//			}
//			else
//			{
//				this.txtgroupement.Visible =true;
//				this.txtgroupement_lbl.Visible=true;
//			}
//			
//	if (this.pklSubType.PickListValue == "-12")
//	{ this.QFImage.Visible = true;
//	}	
//	else
//			{
//				this.QFImage.Visible =false;
//		}

}
protected void quickformload3(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("AccountDetails.OnLoad3", methodArgs);

}
protected void quickformload4(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("AccountDetails.OnLoad2", methodArgs);

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload1(this, EventArgs.Empty);
quickformload2(this, EventArgs.Empty);
quickformload3(this, EventArgs.Empty);
quickformload4(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ClientBindingMgr.RegisterSaveButton(btnSaveAccount);

btnDelete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("btnDelete.ActionConfirmationMessage").ToString()));

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (!RoleSecurityService.HasAccess("ENTITIES/ACCOUNT/EDIT"))
{
btnSaveAccount.Visible = false;
}
if (!RoleSecurityService.HasAccess("ENTITIES/ACCOUNT/DELETE"))
{
btnDelete.Visible = false;
}
if (ClientBindingMgr != null) { ClientBindingMgr.RegisterResetButton(cmdReset); }
quickformload0(this, EventArgs.Empty);
ScriptManager.RegisterClientScriptInclude(this, this.GetType(), "fd404b18-f4f8-456b-a36b-70e1d78418d8", "jscript/Alticap/Alticap.js");


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AccountDetailsAdapter(this)); }
}

public class AccountDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAccountDetails
{
    public AccountDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _AccountName;
    public  Sage.Platform.Controls.ITextBoxControl AccountName
    {
        get { return FindControl(ref _AccountName, "AccountName"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFNOM;
    public  Sage.Platform.Controls.ITextBoxControl QFNOM
    {
        get { return FindControl(ref _QFNOM, "QFNOM"); }
    }
    private Sage.Platform.Controls.IPhoneControl _MainPhone;
    public  Sage.Platform.Controls.IPhoneControl MainPhone
    {
        get { return FindControl(ref _MainPhone, "MainPhone"); }
    }
    private Sage.Platform.Controls.IAddressControl _Address;
    public  Sage.Platform.Controls.IAddressControl Address
    {
        get { return FindControl(ref _Address, "Address"); }
    }
    private Sage.Platform.Controls.IUrlControl _WebAddress;
    public  Sage.Platform.Controls.IUrlControl WebAddress
    {
        get { return FindControl(ref _WebAddress, "WebAddress"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTITRE;
    public  Sage.Platform.Controls.ITextBoxControl QFTITRE
    {
        get { return FindControl(ref _QFTITRE, "QFTITRE"); }
    }
    private Sage.Platform.Controls.IButtonControl _ALMAJPV;
    public  Sage.Platform.Controls.IButtonControl ALMAJPV
    {
        get { return FindControl(ref _ALMAJPV, "ALMAJPV"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _Division;
    public  Sage.Platform.Controls.ITextBoxControl Division
    {
        get { return FindControl(ref _Division, "Division"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _ALDATETRANSFERT;
    public  Sage.Platform.Controls.ITextBoxControl ALDATETRANSFERT
    {
        get { return FindControl(ref _ALDATETRANSFERT, "ALDATETRANSFERT"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFPRENOM;
    public  Sage.Platform.Controls.ITextBoxControl QFPRENOM
    {
        get { return FindControl(ref _QFPRENOM, "QFPRENOM"); }
    }
    private Sage.Platform.Controls.IPhoneControl _Fax;
    public  Sage.Platform.Controls.IPhoneControl Fax
    {
        get { return FindControl(ref _Fax, "Fax"); }
    }
    private Sage.Platform.Controls.IEmailControl _QFSLXEmail;
    public  Sage.Platform.Controls.IEmailControl QFSLXEmail
    {
        get { return FindControl(ref _QFSLXEmail, "QFSLXEmail"); }
    }
    private Sage.Platform.Controls.IDependencyLookupControl _txtgroupement;
    public  Sage.Platform.Controls.IDependencyLookupControl txtgroupement
    {
        get { return FindControl(ref _txtgroupement, "txtgroupement"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox2;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox2
    {
        get { return FindControl(ref _QFTextBox2, "QFTextBox2"); }
    }
    private Sage.Platform.Controls.IPickListControl _Industry;
    public  Sage.Platform.Controls.IPickListControl Industry
    {
        get { return FindControl(ref _Industry, "Industry"); }
    }
    private Sage.Platform.Controls.IOwnerControl _Owner;
    public  Sage.Platform.Controls.IOwnerControl Owner
    {
        get { return FindControl(ref _Owner, "Owner"); }
    }
    private Sage.Platform.Controls.IImageControl _QFImage;
    public  Sage.Platform.Controls.IImageControl QFImage
    {
        get { return FindControl(ref _QFImage, "QFImage"); }
    }
    private Sage.Platform.Controls.IButtonControl _ALMAJTIERS;
    public  Sage.Platform.Controls.IButtonControl ALMAJTIERS
    {
        get { return FindControl(ref _ALMAJTIERS, "ALMAJTIERS"); }
    }
    private Sage.Platform.Controls.IUserControl _AccManager;
    public  Sage.Platform.Controls.IUserControl AccManager
    {
        get { return FindControl(ref _AccManager, "AccManager"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklSubType;
    public  Sage.Platform.Controls.IPickListControl pklSubType
    {
        get { return FindControl(ref _pklSubType, "pklSubType"); }
    }
    private Sage.Platform.Controls.IListBoxControl _QFTextBox;
    public  Sage.Platform.Controls.IListBoxControl QFTextBox
    {
        get { return FindControl(ref _QFTextBox, "QFTextBox"); }
    }
    private Sage.Platform.Controls.IListBoxControl _QFListBox;
    public  Sage.Platform.Controls.IListBoxControl QFListBox
    {
        get { return FindControl(ref _QFListBox, "QFListBox"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklType;
    public  Sage.Platform.Controls.IPickListControl pklType
    {
        get { return FindControl(ref _pklType, "pklType"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _infogroupement;
    public  Sage.Platform.Controls.ITextBoxControl infogroupement
    {
        get { return FindControl(ref _infogroupement, "infogroupement"); }
    }
    private Sage.Platform.Controls.IPickListControl _Status;
    public  Sage.Platform.Controls.IPickListControl Status
    {
        get { return FindControl(ref _Status, "Status"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFPASTILLES;
    public  Sage.Platform.Controls.IButtonControl QFPASTILLES
    {
        get { return FindControl(ref _QFPASTILLES, "QFPASTILLES"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _BusinessDescription;
    public  Sage.Platform.Controls.ITextBoxControl BusinessDescription
    {
        get { return FindControl(ref _BusinessDescription, "BusinessDescription"); }
    }
    private Sage.Platform.Controls.IPhoneControl _TollFree;
    public  Sage.Platform.Controls.IPhoneControl TollFree
    {
        get { return FindControl(ref _TollFree, "TollFree"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _ALCODEL100;
    public  Sage.Platform.Controls.ITextBoxControl ALCODEL100
    {
        get { return FindControl(ref _ALCODEL100, "ALCODEL100"); }
    }
    private Sage.Platform.Controls.IGroupNavigatorControl _AccountDetails_9;
    public  Sage.Platform.Controls.IGroupNavigatorControl AccountDetails_9
    {
        get { return FindControl(ref _AccountDetails_9, "AccountDetails_9"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSaveAccount;
    public  Sage.Platform.Controls.IButtonControl btnSaveAccount
    {
        get { return FindControl(ref _btnSaveAccount, "btnSaveAccount"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdReset;
    public  Sage.Platform.Controls.IButtonControl cmdReset
    {
        get { return FindControl(ref _cmdReset, "cmdReset"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnDelete;
    public  Sage.Platform.Controls.IButtonControl btnDelete
    {
        get { return FindControl(ref _btnDelete, "btnDelete"); }
    }
    private Sage.Platform.Controls.ICopyControl _cmdCopyAccount;
    public  Sage.Platform.Controls.ICopyControl cmdCopyAccount
    {
        get { return FindControl(ref _cmdCopyAccount, "cmdCopyAccount"); }
    }

    public  void OnLoad1(System.EventArgs e)
    {
        Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
        Object[] methodArgs = new Object[] { this, e };
        lib.Execute("AccountDetails.OnLoad1", methodArgs);
    }
    public  void OnLoad3(System.EventArgs e)
    {
        Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
        Object[] methodArgs = new Object[] { this, e };
        lib.Execute("AccountDetails.OnLoad3", methodArgs);
    }
    public  void OnLoad2(System.EventArgs e)
    {
        Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
        Object[] methodArgs = new Object[] { this, e };
        lib.Execute("AccountDetails.OnLoad2", methodArgs);
    }
}

</script>

<script type="text/javascript">
</script>
