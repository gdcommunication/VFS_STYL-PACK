<%@ Control Language="C#" ClassName="SalesOrderDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="50%" />
            <col width="50%" />
     <tr>
            <td  >
<fieldset class="slxlabel radio"  style="width: 53%;" >
<asp:RadioButtonList runat="server"  onclick="dojo.publish('Sage/events/markDirty')" ID="rdgSOType" RepeatDirection="Horizontal" AutoPostBack="true"  >
<asp:ListItem Text="<%$ resources: rdgSOType_item0.Text %>"
Value="False"
 />
<asp:ListItem Text="<%$ resources: rdgSOType_item1.Text %>"
Value="True"
 />
</asp:RadioButtonList>
</fieldset>
      </td>
                <td rowspan="4"  >
<%@ Register tagPrefix="SalesLogix" tagName="wbrSalesOrder" src="~/SmartParts/SalesOrder/SalesOrderSnapShot.ascx" %>
<SalesLogix:wbrSalesOrder id="wbrSalesOrder" runat="server" OnInit="setwbrSalesOrderContext" Visible="false" ></SalesLogix:wbrSalesOrder>
<script runat="server" type="text/C#">
	protected void setwbrSalesOrderContext(object sender, EventArgs e)
	{
		Sage.Platform.WebPortal.SmartParts.SmartPart sp = wbrSalesOrder as Sage.Platform.WebPortal.SmartParts.SmartPart;
		if (sp != null)
		{
			sp.InitSmartPart(ParentWorkItem, PageWorkItem.Services.Get<Sage.Platform.Application.UI.Web.IPageWorkItemLocator>());
			sp.DialogService = DialogService;
			Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPart esp = sp as Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPart;
			if (esp != null)
			{
                esp.InitEntityBoundSmartPart(PageWorkItem.Services.Get<Sage.Platform.Application.IEntityContextService>());
			}
		}
	}
</script>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueAccount_lbl" AssociatedControlID="lueAccount" runat="server" Text="<%$ resources: lueAccount.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueAccount" ButtonToolTip="<%$ resources: lueAccount.ButtonToolTip %>" LookupEntityName="Account" LookupEntityTypeName="Sage.SalesLogix.Entities.Account, Sage.SalesLogix.Entities" EnableHyperLinking="true" AutoPostBack="true" Required="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.MainPhone.PropertyHeader %>" PropertyName="MainPhone" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.SubType.PropertyHeader %>" PropertyName="SubType" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Status.PropertyHeader %>" PropertyName="Status" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="usrAccountManager_lbl" AssociatedControlID="usrAccountManager" runat="server" Text="<%$ resources: usrAccountManager.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrAccountManager" ButtonToolTip="<%$ resources: usrAccountManager.ButtonToolTip %>"  />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpDateCreated_lbl" AssociatedControlID="dtpDateCreated" runat="server" Text="<%$ resources: dtpDateCreated.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpDateCreated" ReadOnly="true" Enabled="false" ButtonToolTip="<%$ resources: dtpDateCreated.ButtonToolTip %>" />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklType_lbl" AssociatedControlID="pklType" runat="server" Text="<%$ resources: pklType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklType" PickListName="Sales Order Type" MustExistInList="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox1_lbl" AssociatedControlID="QFTextBox1" runat="server" Text="<%$ resources: QFTextBox1.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox1" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklStatus_lbl" AssociatedControlID="pklStatus" runat="server" Text="<%$ resources: pklStatus.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklStatus" PickListName="Sales Order Status" MustExistInList="false"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkboxRight">

  <SalesLogix:SLXCheckBox runat="server" ID="QFQTEEXACTE"  Text="<%$ resources: QFQTEEXACTE.Caption %>"  CssClass=""
LabelPlacement="left"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpDueDate_lbl" AssociatedControlID="dtpDueDate" runat="server" Text="<%$ resources: dtpDueDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpDueDate" Required="true" ButtonToolTip="<%$ resources: dtpDueDate.ButtonToolTip %>" DisplayTime="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="QFSGOLD_lbl" AssociatedControlID="QFSGOLD" runat="server" Text="<%$ resources: QFSGOLD.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="QFSGOLD" PickListName="GOLD" MustExistInList="false" MaxLength="64"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCustPO_lbl" AssociatedControlID="txtCustPO" runat="server" Text="<%$ resources: txtCustPO.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCustPO"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox_lbl" AssociatedControlID="QFTextBox" runat="server" Text="<%$ resources: QFTextBox.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="QFRGL1" CssClass="controlslist "
>
   <div class=" lbl alignleft">
   <asp:Label ID="QFSLXPickList_lbl" AssociatedControlID="QFSLXPickList" runat="server" Text="<%$ resources: QFSLXPickList.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="QFSLXPickList" PickListName="CompteModereglement" MustExistInList="false"  />
  </div>

   <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox4_lbl" AssociatedControlID="QFTextBox4" runat="server" Text="<%$ resources: QFTextBox4.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox4"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

</asp:Panel>
      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox2_lbl" AssociatedControlID="QFTextBox2" runat="server" Text="<%$ resources: QFTextBox2.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox2"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="QFRGL2" CssClass="controlslist "
>
   <div class=" lbl alignleft">
   <asp:Label ID="QFSLXPickList2_lbl" AssociatedControlID="QFSLXPickList2" runat="server" Text="<%$ resources: QFSLXPickList2.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="QFSLXPickList2" PickListName="CompteModereglement" MustExistInList="false"  />
  </div>

   <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox5_lbl" AssociatedControlID="QFTextBox5" runat="server" Text="<%$ resources: QFTextBox5.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox5"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

</asp:Panel>
      </td>
                <td  >
 <asp:Button runat="server" ID="QFREPRISE"
 Text="<%$ resources: QFREPRISE.Caption %>"  />
 
      </td>
      </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="QFRGL3" CssClass="controlslist "
>
   <div class=" lbl alignleft">
   <asp:Label ID="QFSLXPickList3_lbl" AssociatedControlID="QFSLXPickList3" runat="server" Text="<%$ resources: QFSLXPickList3.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="QFSLXPickList3" PickListName="CompteModereglement" MustExistInList="false"  />
  </div>

   <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox6_lbl" AssociatedControlID="QFTextBox6" runat="server" Text="<%$ resources: QFTextBox6.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox6"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

</asp:Panel>
      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="QFSLXLookup_lbl" AssociatedControlID="QFSLXLookup" runat="server" Text="<%$ resources: QFSLXLookup.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="QFSLXLookup" LookupEntityName="Account" LookupEntityTypeName="Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String" SeedProperty="Account.Id" EnableHyperLinking="true" InitializeLookup="true" AllowClearingResult="true" OverrideSeedOnSearch="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: QFSLXLookup.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td rowspan="2"  >
<asp:Panel runat="server" ID="ctrlstERPApplication" CssClass="controlslist "
>
   <div class=" lbl alignleft">
   <asp:Label ID="lueERPApplication_lbl" AssociatedControlID="lueERPApplication" runat="server" Text="<%$ resources: lueERPApplication.Caption %>" ></asp:Label>
 </div>   
  <div    >
<SalesLogix:LookupControl runat="server" ID="lueERPApplication" ButtonToolTip="<%$ resources: lueERPApplication.ButtonToolTip %>" LookupEntityName="AppIdMapping" LookupEntityTypeName="Sage.Entity.Interfaces.IAppIdMapping, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="DropDownList" DropDownDisplayProperty="Name" AutoPostBack="true" DialogTitle="<%$ resources: lueERPApplication.LookupDialogTitle %>"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueERPApplication.LookupProperties.Name.PropertyHeader %>" PropertyName="Name" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
<SalesLogix:LookupPreFilter PropertyName="Enabled" PropertyType="System.Boolean" OperatorCode="=" Visible="False"
 FilterValue="True"
 ></SalesLogix:LookupPreFilter>
<SalesLogix:LookupPreFilter PropertyName="IsSystemEndPoint" PropertyType="System.Boolean" OperatorCode="!=" Visible="False"
 FilterValue="true"
 ></SalesLogix:LookupPreFilter>
<SalesLogix:LookupPreFilter PropertyName="IsUserEndpoint" PropertyType="System.Boolean" OperatorCode="=" Visible="False"
 FilterValue="false"
 ></SalesLogix:LookupPreFilter>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

   <div class=" lbl alignleft">
   <asp:Label ID="luePriceList_lbl" AssociatedControlID="luePriceList" runat="server" Text="<%$ resources: luePriceList.Caption %>" ></asp:Label>
 </div>   
  <div    >
<SalesLogix:LookupControl runat="server" ID="luePriceList" ButtonToolTip="<%$ resources: luePriceList.ButtonToolTip %>" LookupEntityName="SlxPriceList" LookupEntityTypeName="Sage.Entity.Interfaces.ISlxPriceList, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="DropDownList" SeedProperty="AppId" DropDownDisplayProperty="Name" InitializeLookup="true" AutoPostBack="true" DialogTitle="<%$ resources: luePriceList.LookupDialogTitle %>"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luePriceList.LookupProperties.Name.PropertyHeader %>" PropertyName="Name" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
<SalesLogix:LookupPreFilter PropertyName="ActiveFlag" PropertyType="System.Boolean" OperatorCode="=" Visible="False"
 FilterValue="True"
 ></SalesLogix:LookupPreFilter>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

</asp:Panel>
      </td>
                <td  >
<div class="slxlabel  alignleft checkboxRight">

  <SalesLogix:SLXCheckBox runat="server" ID="QFTextBox3"  Text="<%$ resources: QFTextBox3.Caption %>"  CssClass=""
LabelPlacement="left"  />
</div>
      </td>
      </tr>
<tr>
                  <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox7_lbl" AssociatedControlID="QFTextBox7" runat="server" Text="<%$ resources: QFTextBox7.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox7"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td rowspan="2"  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtComments"  Rows="2" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea"  />
  </div>

      </td>
            </tr>
<tr>
              </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpOrderDate_lbl" AssociatedControlID="dtpOrderDate" runat="server" Text="<%$ resources: dtpOrderDate.Caption %>" Visible="false" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpOrderDate" ButtonToolTip="<%$ resources: dtpOrderDate.ButtonToolTip %>" DisplayTime="false" Visible="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueRequestedBy_lbl" AssociatedControlID="lueRequestedBy" runat="server" Text="<%$ resources: lueRequestedBy.Caption %>" Visible="false" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueRequestedBy" ButtonToolTip="<%$ resources: lueRequestedBy.ButtonToolTip %>" LookupEntityName="Contact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true" InitializeLookup="true" AllowClearingResult="true" Visible="false" OverrideSeedOnSearch="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.NameLF.PropertyHeader %>" PropertyName="NameLF" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.WorkPhone.PropertyHeader %>" PropertyName="WorkPhone" PropertyType="System.String" PropertyFormat="Phone" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.Email.PropertyHeader %>" PropertyName="Email" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpPromisedDate_lbl" AssociatedControlID="dtpPromisedDate" runat="server" Text="<%$ resources: dtpPromisedDate.Caption %>" Visible="false" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpPromisedDate" ButtonToolTip="<%$ resources: dtpPromisedDate.ButtonToolTip %>" DisplayTime="false" Visible="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueOpportunity_lbl" AssociatedControlID="lueOpportunity" runat="server" Text="<%$ resources: lueOpportunity.Caption %>" Visible="false" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueOpportunity" ButtonToolTip="<%$ resources: lueOpportunity.ButtonToolTip %>" LookupEntityName="Opportunity" LookupEntityTypeName="Sage.Entity.Interfaces.IOpportunity, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true" InitializeLookup="true" AllowClearingResult="true" Visible="false"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Stage.PropertyHeader %>" PropertyName="Stage" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Status.PropertyHeader %>" PropertyName="Status" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.CreateDate.PropertyHeader %>" PropertyName="CreateDate" PropertyType="System.DateTime" PropertyFormat="DateTime" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="SalesOrderDetails_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="groupNavigatorSalesOrder" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="btnSaveSalesOrder"
 AlternateText="<%$ resources: btnSaveSalesOrder.Caption %>"  ToolTip="<%$ resources: btnSaveSalesOrder.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="btnCopy"
 AlternateText="<%$ resources: btnCopy.Caption %>"  ToolTip="<%$ resources: btnCopy.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Copy_16x16"  />
 
    <asp:ImageButton runat="server" ID="btnReset"
 AlternateText="<%$ resources: btnReset.Caption %>"  ToolTip="<%$ resources: btnReset.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Reset_16x16"  />
 
    <asp:ImageButton runat="server" ID="btnDelete"
 AlternateText="<%$ resources: btnDelete.Caption %>"  ToolTip="<%$ resources: btnDelete.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=SalesOrderDetails&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkSalesOrderDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="SalesOrderDetails" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.ISalesOrder); }
}

 

protected override void OnAddEntityBindings() {
                       // lueAccount.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueAccountLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account", lueAccount, "LookupResultValue");
        BindingSource.Bindings.Add(lueAccountLookupResultValueBinding);
                    // usrAccountManager.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrAccountManagerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountManager", usrAccountManager, "LookupResultValue");
        BindingSource.Bindings.Add(usrAccountManagerLookupResultValueBinding);
                    // dtpDateCreated.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpDateCreatedDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateDate", dtpDateCreated, "DateTimeValue");
        BindingSource.Bindings.Add(dtpDateCreatedDateTimeValueBinding);
                    // pklType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OrderType", pklType, "PickListValue");
        BindingSource.Bindings.Add(pklTypePickListValueBinding);
                    // QFTextBox1.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox1TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("GrandTotal", QFTextBox1, "Text");
        BindingSource.Bindings.Add(QFTextBox1TextBinding);
                    // pklStatus.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklStatusPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Status", pklStatus, "PickListValue");
        BindingSource.Bindings.Add(pklStatusPickListValueBinding);
                       // dtpDueDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpDueDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DueDate", dtpDueDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpDueDateDateTimeValueBinding);
                    // QFSGOLD.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFSGOLDPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplementCommande.GOLD", QFSGOLD, "PickListValue");
        BindingSource.Bindings.Add(QFSGOLDPickListValueBinding);
                    // txtCustPO.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCustPOTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CustomerPurchaseOrderNumber", txtCustPO, "Text");
        BindingSource.Bindings.Add(txtCustPOTextBinding);
                    // QFTextBox.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBoxTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplementCommande.NDOSSIER", QFTextBox, "Text");
        BindingSource.Bindings.Add(QFTextBoxTextBinding);
                          // QFTextBox4.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox4TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplementCommande.POURCENTREGLEMENT1", QFTextBox4, "Text");
        BindingSource.Bindings.Add(QFTextBox4TextBinding);
                    // QFTextBox2.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox2TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplementCommande.ODP", QFTextBox2, "Text");
        BindingSource.Bindings.Add(QFTextBox2TextBinding);
                          // QFTextBox5.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox5TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplementCommande.POURCENTREGLEMENT2", QFTextBox5, "Text");
        BindingSource.Bindings.Add(QFTextBox5TextBinding);
                          // QFSLXPickList3.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFSLXPickList3PickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplementCommande.MODEREGLEMENT3", QFSLXPickList3, "PickListValue");
        BindingSource.Bindings.Add(QFSLXPickList3PickListValueBinding);
                    // QFTextBox6.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox6TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplementCommande.POURCENTREGLEMENT3", QFTextBox6, "Text");
        BindingSource.Bindings.Add(QFTextBox6TextBinding);
                    // QFSLXLookup.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFSLXLookupLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplementCommande.CENTREPAYEUR", QFSLXLookup, "LookupResultValue");
        BindingSource.Bindings.Add(QFSLXLookupLookupResultValueBinding);
                 // QFSLXLookup.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFSLXLookupSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", QFSLXLookup, "SeedValue");
        QFSLXLookupSeedValueBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(QFSLXLookupSeedValueBinding);
                       // lueERPApplication.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueERPApplicationLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OperatingCompany", lueERPApplication, "LookupResultValue");
        BindingSource.Bindings.Add(lueERPApplicationLookupResultValueBinding);
                    // luePriceList.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luePriceListLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SlxPriceList", luePriceList, "LookupResultValue");
        BindingSource.Bindings.Add(luePriceListLookupResultValueBinding);
                       // QFTextBox7.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox7TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplementCommande.VISAADV", QFTextBox7, "Text");
        BindingSource.Bindings.Add(QFTextBox7TextBinding);
                    // txtComments.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCommentsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Comments", txtComments, "Text");
        BindingSource.Bindings.Add(txtCommentsTextBinding);
                    // dtpOrderDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpOrderDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OrderDate", dtpOrderDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpOrderDateDateTimeValueBinding);
                    // lueRequestedBy.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueRequestedByLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RequestedBy", lueRequestedBy, "LookupResultValue");
        BindingSource.Bindings.Add(lueRequestedByLookupResultValueBinding);
                 // lueRequestedBy.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueRequestedBySeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", lueRequestedBy, "SeedValue");
        lueRequestedBySeedValueBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(lueRequestedBySeedValueBinding);
                    // dtpPromisedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpPromisedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DatePromised", dtpPromisedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpPromisedDateDateTimeValueBinding);
                    // lueOpportunity.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueOpportunityLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Opportunity", lueOpportunity, "LookupResultValue");
        BindingSource.Bindings.Add(lueOpportunityLookupResultValueBinding);
                 // lueOpportunity.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueOpportunitySeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", lueOpportunity, "SeedValue");
        lueOpportunitySeedValueBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(lueOpportunitySeedValueBinding);
    
   
             
      
      
      
             
      
      
      
                 
      
      
      
    }
                                                                                                                                                                                                                                                     
protected void rdgSOType_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.ISalesOrder salesOrder = this.BindingSource.Current as Sage.Entity.Interfaces.ISalesOrder;
salesOrder.IsQuote = (rdgSOType.SelectedIndex == 1);

}
protected void lueAccount_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.ISalesOrder>("SalesOrder.OnAccountChanged", objarray);

          lueAccount_ChangeActionBRC(sender, e);
    
  
}
protected void lueAccount_ChangeActionBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}
protected void QFREPRISE_ClickAction(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("SalesOrderDetails.QFButton_OnClick", methodArgs);

}
protected void lueERPApplication_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.ISalesOrder salesOrder = BindingSource.Current as Sage.Entity.Interfaces.ISalesOrder;
if (salesOrder.OperatingCompany != null)
{
	luePriceList.SeedValue = salesOrder.OperatingCompany.Id.ToString();
	luePriceList.ResetDropDownListItems();
}
luePriceList.Enabled = (salesOrder.OperatingCompany != null);

}
protected void luePriceList_ChangeAction(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}
protected void btnSaveSalesOrder_ClickAction(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("SalesOrderDetails.btnSaveSalesOrder_OnClick", methodArgs);
  Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}
protected void btnCopy_ClickAction(object sender, EventArgs e) {
      Response.Redirect(string.Format("InsertSalesOrder.aspx?modeid=Insert&copyorder=true&entityId={0}", (BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
   
}
protected void btnReset_ClickAction(object sender, EventArgs e) {
  
}
protected void btnDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }

          btnDelete_ClickActionBRC(sender, e);
    
  
}
protected void btnDelete_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect("SalesOrder.aspx");
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 rdgSOType.TextChanged += new EventHandler(rdgSOType_ChangeAction);
lueAccount.LookupResultValueChanged += new EventHandler(lueAccount_ChangeAction);
QFREPRISE.Click += new EventHandler(QFREPRISE_ClickAction);
lueERPApplication.LookupResultValueChanged += new EventHandler(lueERPApplication_ChangeAction);
luePriceList.LookupResultValueChanged += new EventHandler(luePriceList_ChangeAction);
if (RoleSecurityService != null)
{
if (RoleSecurityService.HasAccess("ENTITIES/SALESORDER/EDIT"))
{
btnSaveSalesOrder.Click += new ImageClickEventHandler(btnSaveSalesOrder_ClickAction);
}
}
if (RoleSecurityService != null)
{
if (RoleSecurityService.HasAccess("ENTITIES/SALESORDER/ADD"))
{
btnCopy.Click += new ImageClickEventHandler(btnCopy_ClickAction);
}
}
btnReset.Click += new ImageClickEventHandler(btnReset_ClickAction);
if (RoleSecurityService != null)
{
if (RoleSecurityService.HasAccess("ENTITIES/SALESORDER/DELETE"))
{
btnDelete.Click += new ImageClickEventHandler(btnDelete_ClickAction);
}
}


}

protected void quickformload0(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("SalesOrderDetails.OnLoad1", methodArgs);

}
protected void quickformload1(object sender, EventArgs e) {
    Sage.Entity.Interfaces.ISalesOrder salesOrder = this.BindingSource.Current as Sage.Entity.Interfaces.ISalesOrder;
    rdgSOType.SelectedIndex = salesOrder.IsQuote.HasValue && salesOrder.IsQuote.Value ? 1 : 0;
	if (salesOrder.ComplementCommande.RAPIDO == null) 
	{
			QFTextBox3.Checked =  false;
	}
	else
	{
			QFTextBox3.Checked = salesOrder.ComplementCommande.RAPIDO.Equals("1") ? true : false;
	}

	if (salesOrder.ComplementCommande.QTEEXACTE == null) 
	{
			QFQTEEXACTE.Checked =  false;
	}
	else
	{
			QFQTEEXACTE.Checked = salesOrder.ComplementCommande.QTEEXACTE.ToString().Equals("1") ? true : false;
	}
	

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload1(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ClientBindingMgr.RegisterSaveButton(btnSaveSalesOrder);

btnDelete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("btnDelete.ActionConfirmationMessage").ToString()));

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (!RoleSecurityService.HasAccess("ENTITIES/SALESORDER/EDIT"))
{
btnSaveSalesOrder.Visible = false;
}
if (!RoleSecurityService.HasAccess("ENTITIES/SALESORDER/ADD"))
{
btnCopy.Visible = false;
}
if (!RoleSecurityService.HasAccess("ENTITIES/SALESORDER/DELETE"))
{
btnDelete.Visible = false;
}
if (ClientBindingMgr != null) { ClientBindingMgr.RegisterResetButton(btnReset); }
quickformload0(this, EventArgs.Empty);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new SalesOrderDetailsAdapter(this)); }
}

public class SalesOrderDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ISalesOrderDetails
{
    public SalesOrderDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IRadioGroupControl _rdgSOType;
    public  Sage.Platform.Controls.IRadioGroupControl rdgSOType
    {
        get { return FindControl(ref _rdgSOType, "rdgSOType"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueAccount;
    public  Sage.Platform.Controls.ILookupControl lueAccount
    {
        get { return FindControl(ref _lueAccount, "lueAccount"); }
    }
    private Sage.Platform.Controls.IUserControl _usrAccountManager;
    public  Sage.Platform.Controls.IUserControl usrAccountManager
    {
        get { return FindControl(ref _usrAccountManager, "usrAccountManager"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpDateCreated;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpDateCreated
    {
        get { return FindControl(ref _dtpDateCreated, "dtpDateCreated"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklType;
    public  Sage.Platform.Controls.IPickListControl pklType
    {
        get { return FindControl(ref _pklType, "pklType"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklStatus;
    public  Sage.Platform.Controls.IPickListControl pklStatus
    {
        get { return FindControl(ref _pklStatus, "pklStatus"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpDueDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpDueDate
    {
        get { return FindControl(ref _dtpDueDate, "dtpDueDate"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtCustPO;
    public  Sage.Platform.Controls.ITextBoxControl txtCustPO
    {
        get { return FindControl(ref _txtCustPO, "txtCustPO"); }
    }
    private Sage.Platform.Controls.IControlsListControl _QFRGL1;
    public  Sage.Platform.Controls.IControlsListControl QFRGL1
    {
        get { return FindControl(ref _QFRGL1, "QFRGL1"); }
    }
    private Sage.Platform.Controls.IPickListControl _QFSLXPickList;
    public  Sage.Platform.Controls.IPickListControl QFSLXPickList
    {
        get { return FindControl(ref _QFSLXPickList, "QFSLXPickList"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox4;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox4
    {
        get { return FindControl(ref _QFTextBox4, "QFTextBox4"); }
    }
    private Sage.Platform.Controls.IControlsListControl _QFRGL2;
    public  Sage.Platform.Controls.IControlsListControl QFRGL2
    {
        get { return FindControl(ref _QFRGL2, "QFRGL2"); }
    }
    private Sage.Platform.Controls.IPickListControl _QFSLXPickList2;
    public  Sage.Platform.Controls.IPickListControl QFSLXPickList2
    {
        get { return FindControl(ref _QFSLXPickList2, "QFSLXPickList2"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox5;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox5
    {
        get { return FindControl(ref _QFTextBox5, "QFTextBox5"); }
    }
    private Sage.Platform.Controls.IControlsListControl _QFRGL3;
    public  Sage.Platform.Controls.IControlsListControl QFRGL3
    {
        get { return FindControl(ref _QFRGL3, "QFRGL3"); }
    }
    private Sage.Platform.Controls.IPickListControl _QFSLXPickList3;
    public  Sage.Platform.Controls.IPickListControl QFSLXPickList3
    {
        get { return FindControl(ref _QFSLXPickList3, "QFSLXPickList3"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox6;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox6
    {
        get { return FindControl(ref _QFTextBox6, "QFTextBox6"); }
    }
    private Sage.Platform.Controls.IControlsListControl _ctrlstERPApplication;
    public  Sage.Platform.Controls.IControlsListControl ctrlstERPApplication
    {
        get { return FindControl(ref _ctrlstERPApplication, "ctrlstERPApplication"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueERPApplication;
    public  Sage.Platform.Controls.ILookupControl lueERPApplication
    {
        get { return FindControl(ref _lueERPApplication, "lueERPApplication"); }
    }
    private Sage.Platform.Controls.ILookupControl _luePriceList;
    public  Sage.Platform.Controls.ILookupControl luePriceList
    {
        get { return FindControl(ref _luePriceList, "luePriceList"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtComments;
    public  Sage.Platform.Controls.ITextBoxControl txtComments
    {
        get { return FindControl(ref _txtComments, "txtComments"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpOrderDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpOrderDate
    {
        get { return FindControl(ref _dtpOrderDate, "dtpOrderDate"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpPromisedDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpPromisedDate
    {
        get { return FindControl(ref _dtpPromisedDate, "dtpPromisedDate"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox1;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox1
    {
        get { return FindControl(ref _QFTextBox1, "QFTextBox1"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _QFQTEEXACTE;
    public  Sage.Platform.Controls.ICheckBoxControl QFQTEEXACTE
    {
        get { return FindControl(ref _QFQTEEXACTE, "QFQTEEXACTE"); }
    }
    private Sage.Platform.Controls.IPickListControl _QFSGOLD;
    public  Sage.Platform.Controls.IPickListControl QFSGOLD
    {
        get { return FindControl(ref _QFSGOLD, "QFSGOLD"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox
    {
        get { return FindControl(ref _QFTextBox, "QFTextBox"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox2;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox2
    {
        get { return FindControl(ref _QFTextBox2, "QFTextBox2"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFREPRISE;
    public  Sage.Platform.Controls.IButtonControl QFREPRISE
    {
        get { return FindControl(ref _QFREPRISE, "QFREPRISE"); }
    }
    private Sage.Platform.Controls.ILookupControl _QFSLXLookup;
    public  Sage.Platform.Controls.ILookupControl QFSLXLookup
    {
        get { return FindControl(ref _QFSLXLookup, "QFSLXLookup"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _QFTextBox3;
    public  Sage.Platform.Controls.ICheckBoxControl QFTextBox3
    {
        get { return FindControl(ref _QFTextBox3, "QFTextBox3"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox7;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox7
    {
        get { return FindControl(ref _QFTextBox7, "QFTextBox7"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueRequestedBy;
    public  Sage.Platform.Controls.ILookupControl lueRequestedBy
    {
        get { return FindControl(ref _lueRequestedBy, "lueRequestedBy"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueOpportunity;
    public  Sage.Platform.Controls.ILookupControl lueOpportunity
    {
        get { return FindControl(ref _lueOpportunity, "lueOpportunity"); }
    }
    private Sage.Platform.Controls.IGroupNavigatorControl _groupNavigatorSalesOrder;
    public  Sage.Platform.Controls.IGroupNavigatorControl groupNavigatorSalesOrder
    {
        get { return FindControl(ref _groupNavigatorSalesOrder, "groupNavigatorSalesOrder"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSaveSalesOrder;
    public  Sage.Platform.Controls.IButtonControl btnSaveSalesOrder
    {
        get { return FindControl(ref _btnSaveSalesOrder, "btnSaveSalesOrder"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnCopy;
    public  Sage.Platform.Controls.IButtonControl btnCopy
    {
        get { return FindControl(ref _btnCopy, "btnCopy"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnReset;
    public  Sage.Platform.Controls.IButtonControl btnReset
    {
        get { return FindControl(ref _btnReset, "btnReset"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnDelete;
    public  Sage.Platform.Controls.IButtonControl btnDelete
    {
        get { return FindControl(ref _btnDelete, "btnDelete"); }
    }

    public  void OnLoad1(System.EventArgs e)
    {
        Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
        Object[] methodArgs = new Object[] { this, e };
        lib.Execute("SalesOrderDetails.OnLoad1", methodArgs);
    }
    public  void QFButton_OnClick(System.EventArgs e)
    {
        Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
        Object[] methodArgs = new Object[] { this, e };
        lib.Execute("SalesOrderDetails.QFButton_OnClick", methodArgs);
    }
    public  void btnSaveSalesOrder_OnClick(System.EventArgs e)
    {
        Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
        Object[] methodArgs = new Object[] { this, e };
        lib.Execute("SalesOrderDetails.btnSaveSalesOrder_OnClick", methodArgs);
    }
}

</script>

<script type="text/javascript">
</script>
